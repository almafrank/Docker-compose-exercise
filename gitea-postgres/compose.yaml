services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v3.5
    command:
      - "--api.insecure=true"        # Aktivera Traefiks dashboard (ej för produktion)
      - "--providers.docker=true"    # Läs labels från Docker
      - "--entrypoints.web.address=:80" # Entrypoint på port 80
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
     
    networks:
      - traefik_network

  # Testcontainer
  whoami:
    image: containous/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
    networks:
      - traefik_network

# Container opensource github web
  gitea:
    image: gitea/gitea:latest
    # Enviroment variables
    environment:
      - GITEA__database__DB_TYPE=${DB_TYPE}
      - GITEA__database__HOST=${DB_HOST}
      - GITEA__database__NAME=${DB_NAME}
      - GITEA__database__USER=${DB_USER}
      - GITEA__database__PASSWD=${DB_PASSWD}
    restart: always
    volumes:
      - git_data:/data
    depends_on:
      - db
    #
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea.rule=Host(\"gitea.localhost\")"
      - "traefik.http.routers.gitea.entrypoints=web"
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"
    networks:
     
      
      - traefik_network
      - postgres_network

    
    

    
  #Container db(endast internt)
  db:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - postgres_network
volumes:
  
  git_data:
  db_data:

networks:
  traefik_network:
  postgres_network:


  
  
    
